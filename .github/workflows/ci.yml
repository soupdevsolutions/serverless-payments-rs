name: CI

on:
    push:
        branches:
        - main
    pull_request:
        branches:
        - main

env:
    RUSTFLAGS: -Dwarnings

jobs:
    rust-test:
        name: Test
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Install Rust
          uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            override: true
        - name: Run tests
          run: cargo test --all
    rust-clippy:
        name: Clippy
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Install Rust
          uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            override: true
        - name: Run clippy
          run: cargo clippy --all -- -D warnings
    rust-fmt:
        name: Fmt
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Install Rust
          uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            override: true
        - name: Run fmt
          run: cargo fmt --all -- --check
    terraform-validate:
        name: Terraform Init
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Install Terraform
          uses: hashicorp/setup-terraform@v1
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
        - name: Run terraform init
          run: terraform -chdir=infrastructure init
        - name: Run terraform validate
          run: terraform -chdir=infrastructure validate
    terraform-fmt:
        name: Terraform Fmt
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Install Terraform
          uses: hashicorp/setup-terraform@v1
        - name: Run terraform fmt
          run: terraform -chdir=infrastructure fmt -check